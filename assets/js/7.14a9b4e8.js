(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{209:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"api-reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-reference","aria-hidden":"true"}},[t._v("#")]),t._v(" API Reference")]),t._v(" "),s("p",[t._v("Main module.")]),t._v(" "),s("h2",{attrs:{id:"dna"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dna","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("dna()")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@composite")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dna")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("draw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Callable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" allow_ambiguous"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" allow_gaps"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uppercase_only"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" min_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max_size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Optional"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Generates DNA sequences.")]),t._v(" "),s("p",[t._v("Arguments:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("allow_ambiguous")]),t._v(": Whether ambiguous bases are permitted.")]),t._v(" "),s("li",[s("code",[t._v("allow_gaps")]),t._v(": Whether a "),s("code",[t._v("-")]),t._v(" may be in the DNA sequence.")]),t._v(" "),s("li",[s("code",[t._v("uppercase_only")]),t._v(": Whether to use only uppercase characters.")]),t._v(" "),s("li",[s("code",[t._v("min_size")]),t._v(": The shortest DNA sequence to generate.")]),t._v(" "),s("li",[s("code",[t._v("max_size")]),t._v(": The longest DNA sequence to generate.")])]),t._v(" "),s("h2",{attrs:{id:"cds"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cds","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("cds()")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@composite")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("draw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Callable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" allow_ambiguous"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" allow_gaps"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uppercase_only"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" min_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max_size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Generates "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Coding_region",target:"_blank",rel:"noopener noreferrer"}},[t._v("coding DNA sequences"),s("OutboundLink")],1),t._v(" (CDSs).")]),t._v(" "),s("p",[t._v("The arguments are the same as for "),s("a",{attrs:{href:"#dna"}},[s("code",[t._v("dna()")])]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"parsed-fasta"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parsed-fasta","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("parsed_fasta()")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@composite")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parsed_fasta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("draw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Callable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" comment_source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SearchStrategy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sequence_source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" SearchStrategy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"kmers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kmers","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("kmers()")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@composite")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("kmers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("draw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Callable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" seq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Generates k-mers (short sliding window substrings) from a given sequence")]),t._v(" "),s("p",[t._v("Arguments:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("seq")]),t._v(": The sequence to be used for generating k-mers")]),t._v(" "),s("li",[s("code",[t._v("k")]),t._v(": Size of the substrings to be generated")])]),t._v(" "),s("h2",{attrs:{id:"fasta"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fasta","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("fasta()")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@composite")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fasta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("draw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Generate strings representing sequences in FASTA format.")]),t._v(" "),s("h2",{attrs:{id:"fastq-quality"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fastq-quality","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("fastq_quality()")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@composite")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fastq_quality")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("draw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Callable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Generates the quality string for the FASTQ format")]),t._v(" "),s("p",[t._v("Arguments:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("size")]),t._v(": Size of the quality string to be generated")])]),t._v(" "),s("p",[t._v("Note:\nAccording to https://en.wikipedia.org/wiki/FASTQ_format,\nthe range of characters for the quality string ranges from\nbyte value 0x21 to 0x7E.")]),t._v(" "),s("h2",{attrs:{id:"fastq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fastq","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("code",[t._v("fastq()")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@composite")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fastq")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("draw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Callable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fasta_source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Dict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Generate strings representing sequences in FASTQ format.")])])}),[],!1,null,null,null);a.default=n.exports}}]);